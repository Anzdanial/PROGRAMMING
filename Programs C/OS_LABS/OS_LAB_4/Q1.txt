#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <wait.h>
#include <stdlib.h>

//fd[0] is for reading
//fd[1] is for writing
const int BUFFER_SIZE = 10;

int main(int argc, char **argv) {
    int fd[2];
    pipe(fd);
    int val = fork();
    if(val == 0){
        close(fd[1]);
        char caseMessage[BUFFER_SIZE];
        read(fd[0], caseMessage, BUFFER_SIZE);
        for(int i = 0; i < 10; i++){
            if(caseMessage[i] > 96 && caseMessage[i] < 123)
                caseMessage[i] = caseMessage[i]-32;
            else if(caseMessage[i] > 64 && caseMessage[i] < 91)
                caseMessage[i] = caseMessage[i]+32;
        }
        printf("Child Process String is: %s with Process ID %d and Parent ID %d \n", caseMessage, getpid(), getppid());
        printf("\n");
    }
    else if(val > 0){
        close(fd[0]);
        char message[BUFFER_SIZE];
        for(int i = 0, counter = 0; i < argc - 1 ; i++){
            for(int j = 0; argv[i+1][j] != '\0'; j++, counter++) {
                message[counter] = argv[i+1][j];
            }
        }
        printf("The original string is: %s with Parent ID %d \n",message,getpid());

        write(fd[1], message, BUFFER_SIZE);
        wait(NULL);
    }

    return 0;
}
