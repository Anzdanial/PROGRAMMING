//class ComponentListenerResource implements ListSelectionListener, ActionListener {
//    private DefaultListModel<String> listModelResource;
//    private DefaultListModel<String> listModelSkill;
//    private JList<String> listResource;
//    private JList<String> listSkill;
//    private JTextField fieldResource;
//    private JTextField fieldSkill;
//    private JTextField fieldExperience;
//
//    ComponentListenerResource(JList<String> listResource, JList<String> listSkill, DefaultListModel<String> listModelResource, DefaultListModel<String> listModelSkill, JTextField fieldResource, JTextField fieldSkill, JTextField fieldExperience) {
//        this.listResource = listResource;
//        this.listSkill = listSkill;
//        this.listModelResource = listModelResource;
//        this.listModelSkill = listModelSkill;
//        this.fieldResource = fieldResource;
//        this.fieldSkill = fieldSkill;
//       this.fieldExperience = fieldExperience;
//    }
//
//    public void actionPerformed(ActionEvent e) {
//        listModelResource.addElement(fieldResource);
//        if(selectedResource){
//            listModelSkill.addElement(fieldSkill.getText());
//        }
//    }
//
//    public void valueChanged(ListSelectionEvent e) {
//        if (!e.getValueIsAdjusting()) {
//            int index = e.getLastIndex();
//            String selectedValue = listResource.getSelectedValue();
//        }
//    }
//}

class AdditionForm {
    AdditionForm(){
        JFrame frame = new JFrame();
        Container contentPane = frame.getContentPane();
        SpringLayout layout = new SpringLayout();

        JLabel resourceLabel = new JLabel("Resource: ");
        JTextField resourceField = new JTextField("", 12);
        JButton resourceAddButton = new JButton("Add");

        JLabel skillLabel = new JLabel("Skill: ");
        JLabel skillExperienceLabel = new JLabel("Experience: ");
        JTextField skillField = new JTextField("", 8);
        JTextField skillExperienceField = new JTextField("", 6);
        JButton skillAddButton = new JButton("Add");

        DefaultListModel<String> listModelResource = new DefaultListModel<>();
        JList<String> myListResource = new JList<>(listModelResource);

        DefaultListModel<JList<String>> listModelResourceSkills = new DefaultListModel<>();
        JList<JList<String>> myListResourceSkills = new JList<>(listModelResourceSkills);

        JScrollPane scrollPaneResource = new JScrollPane(myListResource);
        JScrollPane scrollPaneSkill = new JScrollPane(myListResourceSkills);

        contentPane.setLayout(layout);

        contentPane.add(resourceLabel);
        contentPane.add(resourceField);
        contentPane.add(resourceAddButton);
        contentPane.add(scrollPaneResource);

        contentPane.add(skillLabel);
        contentPane.add(skillField);
        contentPane.add(skillExperienceLabel);
        contentPane.add(skillExperienceField);
        contentPane.add(skillAddButton);
        contentPane.add(scrollPaneSkill);

        layout.putConstraint(SpringLayout.WEST, resourceLabel, 20, SpringLayout.WEST,contentPane);
        layout.putConstraint(SpringLayout.NORTH, resourceLabel, 5, SpringLayout.NORTH,contentPane);

        layout.putConstraint(SpringLayout.WEST, resourceField, 5, SpringLayout.EAST, resourceLabel);
        layout.putConstraint(SpringLayout.NORTH, resourceField, 5, SpringLayout.NORTH, contentPane);

        layout.putConstraint(SpringLayout.WEST, resourceAddButton, 5, SpringLayout.EAST, resourceField);
        layout.putConstraint(SpringLayout.NORTH, resourceAddButton, 5, SpringLayout.NORTH, contentPane);

        layout.putConstraint(SpringLayout.WEST, scrollPaneResource, 25, SpringLayout.WEST, contentPane);
        layout.putConstraint(SpringLayout.NORTH, scrollPaneResource, 50, SpringLayout.NORTH, contentPane);

        layout.putConstraint(SpringLayout.WEST,skillLabel, 20, SpringLayout.EAST,resourceAddButton);
        layout.putConstraint(SpringLayout.NORTH, skillLabel, 5, SpringLayout.NORTH,contentPane);

        layout.putConstraint(SpringLayout.WEST, skillField, 5, SpringLayout.EAST, skillLabel);
        layout.putConstraint(SpringLayout.NORTH, skillField, 5, SpringLayout.NORTH, contentPane);

        layout.putConstraint(SpringLayout.WEST,skillExperienceLabel, 10, SpringLayout.EAST,skillField);
        layout.putConstraint(SpringLayout.NORTH, skillExperienceLabel, 5, SpringLayout.NORTH,contentPane);

        layout.putConstraint(SpringLayout.WEST, skillExperienceField, 5, SpringLayout.EAST, skillExperienceLabel);
        layout.putConstraint(SpringLayout.NORTH, skillExperienceField, 5, SpringLayout.NORTH, contentPane);

        layout.putConstraint(SpringLayout.WEST, skillAddButton, 5, SpringLayout.EAST, skillExperienceField);
        layout.putConstraint(SpringLayout.NORTH, skillAddButton, 5, SpringLayout.NORTH, contentPane);

        layout.putConstraint(SpringLayout.WEST, scrollPaneSkill, 20, SpringLayout.EAST, scrollPaneResource);
        layout.putConstraint(SpringLayout.NORTH, scrollPaneSkill, 50, SpringLayout.NORTH, contentPane);

//        ComponentListenerResource listenerResource = new ComponentListenerResource(myListResource, listModelResource, listModelSkill, resourceField);
//        ComponentListenerResource listenerSkill = new ComponentListenerResource(myListSkill, listModelSkill, listModelResource, skillField);

        ArrayList<Data>resourceDataList = new ArrayList<>();
        resourceAddButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                listModelResource.addElement(resourceField.getText());
                Data temp = new Data();
                temp.setDataName(resourceField.getText());
                resourceDataList.add(temp);
                resourceField.setText("");
            }
        });
//        myListResource.addListSelectionListener(new ListSelectionListener() {
//            @Override
//            public void valueChanged(ListSelectionEvent e) {
//                if(!e.getValueIsAdjusting()){
//                    int val = e.getLastIndex();
//                    System.out.println(listModelResource.get(val));
//                }
//            }
//        });
        skillAddButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                myListResource.addListSelectionListener(new ListSelectionListener() {
                    @Override
                    public void valueChanged(ListSelectionEvent e) {
                        int val = e.getLastIndex();
                        Data temp = resourceDataList.get(val);
                    }
                });
            }
        });

        frame.pack();
        frame.setTitle("Add Form");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(700, 300);
        frame.setVisible(true);
    }
}